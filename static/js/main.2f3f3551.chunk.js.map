{"version":3,"sources":["components/errorMessage/err.jpg","components/header/header.js","services/service.js","components/spiner/spiner.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/itemList/itemList.js","components/charDetails/charDetails.js","components/characterPage/characterPage.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderBlock","styled","div","_templateObject","HeaderTitle","h3","_templateObject2","HeaderLinks","ul","_templateObject3","Header","react_default","a","createElement","href","Service","_this","this","Object","classCallCheck","getResource","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","res","wrap","_context","prev","next","fetch","concat","_apiBase","sent","ok","Error","status","json","abrupt","stop","_x","apply","arguments","_transformCharacter","char","name","isEmpty","gender","born","died","culture","id","console","log","map","character","data","house","region","words","titles","overlord","ancestralWeapons","book","numberOfPages","publisher","released","Spinner","className","ErrorMessage","Fragment","src","img","alt","RandomChar","service","state","loading","error","onCharLoaded","setState","onError","err","updateChar","Math","floor","random","getCharacter","then","catch","timerId","setInterval","clearInterval","_this$state","errorMessage","components_errorMessage_errorMessage","spinner","spiner_spiner","content","randomChar_View","Component","View","ItemList","charList","_this2","getAllCharacters","arr","_this3","item","i","key","onClick","props","onCharSelected","items","renderItems","CharDetails","charId","prevProps","_this$state$char","CharacterPage","selectedChar","Row","Col","md","itemList_ItemList","charDetails_CharDetails","App","showRandomChar","toggleRandomChar","randomChar_RandomChar","Container","header","lg","size","offset","characterPage_CharacterPage","ReactDOM","render","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f3f3551.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/err.22389cf4.jpg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n    font-size: 24px;\n    color: #fff;\n    margin: 0;\n`;\n\nconst HeaderLinks = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\n\nconst Header = () => {\n    return (\n        <HeaderBlock>\n            <HeaderTitle>\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </HeaderTitle>\n            <HeaderLinks>\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>\n                </li>\n            </HeaderLinks>\n        </HeaderBlock>\n    );\n};\n\nexport default Header;","export default class Service {\r\n         constructor() {\r\n            this._apiBase = 'https://www.anapioficeandfire.com/api';\r\n         }\r\n     \r\n         getResource = async (url) => {\r\n            const res = await fetch(`${this._apiBase}${url}`);\r\n        \r\n            if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}` +\r\n                `, received ${res.status}`);\r\n            }\r\n            return await res.json();\r\n         }\r\n     \r\n         getAllBooks() {\r\n            return this.getResource(`/books/`);\r\n         }\r\n         \r\n         getBook(id) {\r\n            return this.getResource(`/books/${id}/`);\r\n         }\r\n         \r\n         async getAllCharacters() {\r\n            const res = await this.getResource(`/characters?page=5&pageSize=10`);\r\n            console.log(res)\r\n            return res.map(this._transformCharacter);\r\n        }\r\n         \r\n         async getCharacter(id) {\r\n            const character = await this.getResource(`/characters/${id}`);\r\n            return this._transformCharacter(character);\r\n        }\r\n         \r\n         getAllHouses() {\r\n             return this.getResource(`/houses/`);\r\n         }\r\n         \r\n         getHouse(id) {\r\n             return this.getResource(`/houses/${id}/`);\r\n         }\r\n\r\n         isEmpty(data){\r\n            if(data){\r\n                return data;\r\n            }else{\r\n                return \"no-data...\";\r\n            }\r\n         }\r\n\r\n         _transformCharacter = (char) =>{\r\n                  return {\r\n                           name: this.isEmpty(char.name),\r\n                           gender: this.isEmpty(char.gender),\r\n                           born: this.isEmpty(char.born),\r\n                           died: this.isEmpty(char.died),\r\n                           culture: this.isEmpty(char.culture)\r\n                  }\r\n         }\r\n\r\n         _transformHouse(house){\r\n                  return{\r\n                           name: house.name,\r\n                           region: house.region,\r\n                           words: house.words,\r\n                           titles: house.titles,\r\n                           overlord: house.overlord,\r\n                           ancestralWeapons: house.ancestralWeapons\r\n                  }\r\n         }\r\n\r\n         _transformBook(book){\r\n                  return{\r\n                           name: book.name,\r\n                           numberOfPages: book.numberOfPages,\r\n                           publisher: book.publisher,\r\n                           released: book.released\r\n                  }\r\n         }\r\n     }","import React from 'react';\r\nimport './spiner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-spin\"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport img from './err.jpg';\r\nimport './errorMessage.css';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <>\r\n            <img src={img} alt=\"error\"></img>\r\n            <span>Something goes wrong :(</span>\r\n        </>\r\n    )\r\n    \r\n}\r\nexport default ErrorMessage;","import React, {Component} from 'react';\nimport './randomChar.css';\nimport Service from '../../services/service'\nimport Spiner from '../spiner/spiner'\nimport ErrorMessage from '../errorMessage/errorMessage'\n\nexport default class RandomChar extends Component {\n    service = new Service();\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount(){\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, 10500);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    updateChar = () =>{\n        const id = Math.floor(Math.random()*140+25); //25-140\n        //const id = 1300000;\n        this.service.getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n\n        const {char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spiner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"random-block rounded\">\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        );\n    }\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n    return (\n        <>\n            <h4>Random Character: {name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender </span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born </span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died </span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture </span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n        </>\n    )\n}\n","import React, {Component} from 'react';\nimport './itemList.css';\nimport Spinner from '../spiner/spiner';\nimport Service from '../../services/service'\nexport default class ItemList extends Component {\n\n    service = new Service();\n\n    state = {\n        charList: null\n    }\n\n    componentDidMount(){\n        this.service.getAllCharacters()\n            .then((charList) => {\n                this.setState({\n                    charList\n                });\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n    renderItems(arr){\n        return arr.map((item, i)=>{\n            return (\n                <li \n                    key={i}\n                    className=\"list-group-item\"\n                    onClick={() => this.props.onCharSelected(41 + i)}\n                    >\n                    {item.name}\n                </li>\n            )\n        })\n    }\n    \n    render() {\n    \n        const {charList} = this.state;\n\n        if(!charList){\n            return <Spinner/>\n        }\n\n        const items = this.renderItems(charList);\n\n        return (\n            <ul className=\"item-list list-group mb-5\">\n                {items}\n            </ul>\n        );\n    }\n}","import React, {Component} from 'react';\nimport Service from '../../services/service';\nimport './charDetails.css';\nexport default class CharDetails extends Component {\n\n    service = new Service();\n\n    state = {\n        char: null\n    }\n\n    componentDidMount(){\n        this.updateChar()\n    }\n\n    updateChar(){\n        const {charId} = this.props;\n        if(!charId){\n            return;\n        }\n\n        this.service.getCharacter(charId)\n            .then((char) => {\n                this.setState({\n                    char\n                })\n            })\n            //this.foo.bar = 0;\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.charId !== prevProps.charId){\n            this.updateChar();\n        }\n    }\n\n    render() {\n\n        if(!this.state.char){\n            return (\n                <span className='select-error'>Choose Character</span>\n            );\n        }\n\n        const {name, gender, born, died, culture} = this.state.char\n\n        return (\n            <div className=\"char-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture</span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\r\nimport {Col, Row} from 'reactstrap';\r\nimport ItemList from '../itemList/itemList';\r\nimport CharDetails from '../charDetails/charDetails';\r\nimport ErrorMessage from '../errorMessage/errorMessage'\r\n\r\nexport default class CharacterPage extends Component{\r\n\r\n    state = {\r\n        selectedChar: 130,\r\n        error: false\r\n    }\r\n\r\n    onCharSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    componentDidCatch(){\r\n        console.log('error');\r\n        this.setState({\r\n            error: true\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return (\r\n            <Row>\r\n                    <Col md='6'>\r\n                        <ItemList \r\n                            onCharSelected={this.onCharSelected}\r\n                        />\r\n                    </Col>\r\n                    <Col md='6'>\r\n                        <CharDetails \r\n                            charId={this.state.selectedChar}\r\n                        />\r\n                    </Col>\r\n            </Row> \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\nimport {Col, Row, Container} from 'reactstrap';\nimport Header from '../header/header';\nimport RandomChar from '../randomChar/randomChar';\nimport ErrorMessage from '../errorMessage/errorMessage'\nimport CharacterPage from '../characterPage/characterPage'\n\nexport default class App extends Component {\n\n    state = {\n        showRandomChar: true,\n        error: false\n    }\n\n    toggleRandomChar = () => {\n        this.setState((state) => {\n            return {\n                showRandomChar: !state.showRandomChar\n            }\n        });\n    }\n\n    render() {\n        const char = this.state.showRandomChar ? <RandomChar/> : null;\n\n        if(this.state.error){\n            return <ErrorMessage/>\n        }\n\n        return (\n            <> \n                <Container>\n                    <Header />\n                </Container>\n                <Container>\n                    <Row>\n                        <Col lg={{size: 5, offset: 0}}>\n                            {char}\n                            <button \n                            onClick={this.toggleRandomChar} \n                            className=\"btn btn-primary mb-4\">Toggle random Char</button>\n                        </Col>\n                    </Row>\n                    <CharacterPage/>\n                </Container>\n            </>\n        );\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}